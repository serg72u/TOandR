МОДУЛЬ ОБЫЧНОГО ПРИЛОЖЕНИЯ
 
1.Раздел описания переменных вставить следующий код:
  //=ТОиР==>
Перем глТекущийПользователь Экспорт; 				// В переменной содержится значение
                   									// текущего пользователя данной конфигурации
													
Перем МенеджерЛицензий Экспорт;						// В переменной содержится значение
                									// менеджера лицензий данной конфигурации
													
Перем ИспользоватьМенеджерЛицензий Экспорт; 		// Глобальный флаг:
													// использовать защищенные обработки или нет.
													
Перем ОбработкаЗащитаУправленияРемонтами Экспорт; 	// В переменной содержится значение
												  	// обработки торо_ЗащитаУправлениеРемонтами
//<==ТОиР=

2. В процедуру ПриНачалеРаботыСистемы вставить следующий код:
 
//=ТОиР==>
	ОткрытьПанельФункций = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОтображатьПанельФункцийТОиР");
	Если ОткрытьПанельФункций Тогда 
		ОбработкаПанельФункций = Обработки.торо_ПанельФункций.Создать();
		ОбработкаПанельФункций.ПолучитьФорму().Открыть();
	КонецЕсли;
	
	ОткрытьПанельЗадач = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОтображатьПанельЗадачТОиР");
	Если ОткрытьПанельЗадач Тогда 
		ОбработкаПанельФункций = Обработки.торо_ТекущиеЗадачи.Создать();
		ОбработкаПанельФункций.ПолучитьФорму().Открыть();
	КонецЕсли;
//<==ТОиР=

3. В процедуру ПередНачаломРаботыСистемы вставить следующий код:
	//=ТОиР==>
	Если Не Отказ Тогда
		
		ИспользоватьМенеджерЛицензий = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ИспользоватьТОиР");
		Если ИспользоватьМенеджерЛицензий Тогда
			
			ЗапускМенеджераЛицензий();
			
		КонецЕсли;
		
	КонецЕсли; 
	//<==ТОиР=


4. В разделе описания процедур и функций, необходимо вставить следующий код:
	//=ТОиР==>

	// Функция выполняет запуск менежера лицензий
	//
	// Параметры:
	// Нет.
	//
	// Возвращаемое значение:
	// МенеджерЛицензий   внешняя компонента лицензирования конфигурации.
	//
	Функция ЗапускМенеджераЛицензий() Экспорт

		ВнешняяКомпонентаПодключена = ПодключитьВнешнююКомпоненту("ОбщийМакет.торо_КомпонентаСЛК_2_0",
			"Licence", ТипВнешнейКомпоненты.Native);
		
		Если Не ВнешняяКомпонентаПодключена Тогда
			
			Попытка
				
				УстановитьВнешнююКомпоненту("ОбщийМакет.торо_КомпонентаСЛК_2_0");
				ВнешняяКомпонентаПодключена = ПодключитьВнешнююКомпоненту("ОбщийМакет.торо_КомпонентаСЛК_2_0",
					"Licence", ТипВнешнейКомпоненты.Native);
							
			Исключение
				
				Сообщить("Ошибка подключения компоненты СЛК!" + ОписаниеОшибки());
				Возврат Ложь;
				
			КонецПопытки;
		
		КонецЕсли; 
		
		Если ВнешняяКомпонентаПодключена Тогда
			
			Попытка
				МенеджерЛицензий = Новый("AddIn.Licence.LicenceExtension20");
			Исключение
				Сообщить(ОписаниеОшибки());
				Возврат Ложь;
			КонецПопытки;
			
			// Запуск по серии ключей
			Возврат МенеджерЛицензий.Запуск("B0A2");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецФункции

	//Функция выполняет проверку запуска менеджера лицензий ТОиР
	//
	Функция МенеджерЛицензийТОИРЗапущен() Экспорт

		МенеджерЛицезийЗапущен = Истина;
		
		Если МенеджерЛицензий = Неопределено Тогда
			
			МенеджерЛицезийЗапущен = Ложь;
			
		ИначеЕсли Не(ТипЗнч(МенеджерЛицензий) = Тип("AddIn.Licence.LicenceExtension20")
			И МенеджерЛицензий.Запущен) Тогда
			
			МенеджерЛицезийЗапущен = Ложь;
			
		КонецЕсли;
		
		Если МенеджерЛицезийЗапущен = Ложь Тогда
		
			Возврат ЗапускМенеджераЛицензий();
			
		КонецЕсли;

		Возврат Истина;
		
	КонецФункции // МенеджерЛицензийТОИРЗапущен()

	ИспользоватьМенеджерЛицензий = Ложь;

	//<==ТОиР=

МОДУЛЬ СЕАНСА
1. В процедуру УстановкаПараметровСеанса вставить код:
	Если ТребуемыеПараметры = Неопределено Тогда
		// раздел "безусловной" инициализации параметров сеанса
		ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
		
		//=> ТОиР
		торо_ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
		//<= ТОиР
		
	Иначе
		...
		
//Основная конфигурация ОбщаяФорма.ПодборРолей.Форма.Модуль  
//1. Вставить строчку в функцию ПриОткрытии()
//
//
//
//
//	//<=ТОиР
//	
//	торо_Интеграция.ДополнитьТаблицуСоответствияРолейГруппам(СписокРолейКонфигурации,ДеревоРолейДляВыбора);
//	
//	//ТОиР=>
//

Основная конфигурация ОбщаяФорма.ПодборРолейУправляемая.Форма.Модуль

1. Вставить строчку в функцию 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Параметры.ЗаголовокФормы;
	
	// Роль "Пользователь" нельзя выбрать, она добавляется автоматически
	// Определим есть ли она у пользователя
	ЕстьРольПользователь = (СоставРолей.НайтиСтроки(Новый Структура("ИмяРоли","Пользователь")).Количество() <> 0);
	
	СписокРолейКонфигурации.Загрузить(УправлениеПользователями.ПолучитьСписокРолейКонфигурации(Истина));
	
	//<=ТОиР
	
	ДанныеСписокРолейКонфигурации = СписокРолейКонфигурации.Выгрузить();
	ДанныеДеревоРолейДляВыбора = ДанныеФормыВЗначение(ДеревоРолейДляВыбора, Тип("ДеревоЗначений"));
	
	торо_Интеграция.ДополнитьТаблицуСоответствияРолейГруппам(ДанныеСписокРолейКонфигурации, ДанныеДеревоРолейДляВыбора);
	
	ЗначениеВДанныеФормы(ДанныеСписокРолейКонфигурации, СписокРолейКонфигурации);
	ЗначениеВДанныеФормы(ДанныеДеревоРолейДляВыбора, ДеревоРолейДляВыбора);
	
	//ТОиР=>
	
	ЗаполнитьДеревоРолейДляВыбора(Параметры.СписокРолей);
	
КонецПроцедуры



МОДУЛЬ УПРАВЛЯЕМОГО ПРИЛОЖЕНИЯ
1. Раздел описания переменных вставить следующий код:
	//=ТОиР==>
	Перем глТекущийПользователь Экспорт; // В переменной содержится значение
	                   // текущего пользователя данной конфигурации

	Перем МенеджерЛицензий Экспорт;	// В переменной содержится значение
	                // менеджера лицензий данной конфигурации

	Перем ИспользоватьМенеджерЛицензий Экспорт; // Глобальный флаг:
												// использовать защищенные обработки или нет.

	Перем ОбработкаЗащитаУправленияРемонтами Экспорт; // В переменной содержится значение

	//<==ТОиР=
2. В процедуру ПередНачаломРаботыСистемы вставить следующий код:
	//=ТОиР==>
	ИспользоватьМенеджерЛицензий = торо_ФормыСерверУправляемый.ПолучитьНастройкуПользователя("ИспользоватьТОиР");
	//ПараметрыСеанса.торо_ПризнакУПП = Истина;
	Если ИспользоватьМенеджерЛицензий Тогда
		ЗапускМенеджераЛицензий();
	КонецЕсли;
	//<==ТОиР=
3. В разделе описания процедур и функций, необходимо вставить следующий код:
	//=ТОиР==>

	// Функция выполняет запуск менежера лицензий
	//
	// Параметры:
	// Нет.
	//
	// Возвращаемое значение:
	// МенеджерЛицензий   внешняя компонента лицензирования конфигурации.
	//
	Функция ЗапускМенеджераЛицензий() Экспорт

		ВнешняяКомпонентаПодключена = ПодключитьВнешнююКомпоненту("ОбщийМакет.торо_КомпонентаСЛК_2_0",
			"Licence", ТипВнешнейКомпоненты.Native);
		
		Если Не ВнешняяКомпонентаПодключена Тогда
			
			Попытка
				
				УстановитьВнешнююКомпоненту("ОбщийМакет.торо_КомпонентаСЛК_2_0");
				ВнешняяКомпонентаПодключена = ПодключитьВнешнююКомпоненту("ОбщийМакет.торо_КомпонентаСЛК_2_0",
					"Licence", ТипВнешнейКомпоненты.Native);
							
			Исключение
				
				Сообщить("Ошибка подключения компоненты СЛК!" + ОписаниеОшибки());
				Возврат Ложь;
				
			КонецПопытки;
		
		КонецЕсли; 
		
		Если ВнешняяКомпонентаПодключена Тогда
			
			Попытка
				МенеджерЛицензий = Новый("AddIn.Licence.LicenceExtension20");
			Исключение
				Сообщить(ОписаниеОшибки());
				Возврат Ложь;
			КонецПопытки;
			
			// Запуск по серии ключей
			Возврат МенеджерЛицензий.Запуск("B0A2");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецФункции

	//Функция выполняет проверку запуска менеджера лицензий ТОиР
	//
	Функция МенеджерЛицензийТОИРЗапущен() Экспорт

		МенеджерЛицезийЗапущен = Истина;
		
		Если МенеджерЛицензий = Неопределено Тогда
			
			МенеджерЛицезийЗапущен = Ложь;
			
		ИначеЕсли Не(ТипЗнч(МенеджерЛицензий) = Тип("AddIn.Licence.LicenceExtension20")
			И МенеджерЛицензий.Запущен) Тогда
			
			МенеджерЛицезийЗапущен = Ложь;
			
		КонецЕсли;
		
		Если МенеджерЛицезийЗапущен = Ложь Тогда
		
			Возврат ЗапускМенеджераЛицензий();
			
		КонецЕсли;

		Возврат Истина;
		
	КонецФункции // МенеджерЛицензийТОИРЗапущен()

	ИспользоватьМенеджерЛицензий = Ложь;

	//<==ТОиР=
ОБЩИЕ МОДУЛИ
1. В модуль ОбщийМодуль.БиблиотекаОбновленияИнформационнойБазыПереопределяемый
	в Функция ОбработчикиОбновления() Экспорт	вставить следующие строки

	// Конфигурация ТОиР 
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия    = "*";
	Обработчик.Процедура = "торо_ОбновлениеИнформационнойБазы.ВыполнитьОбновлениеИнформационнойБазы";
	//



